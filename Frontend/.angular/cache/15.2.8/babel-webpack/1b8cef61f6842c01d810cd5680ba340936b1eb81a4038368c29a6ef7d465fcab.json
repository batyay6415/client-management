{"ast":null,"code":"import _asyncToGenerator from \"C:/full-stack/managment full-stack angular/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"src/app/services/notify.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ListComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\")(11, \"label\")(12, \"input\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function ListComponent_tr_19_Template_input_ngModelChange_12_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const t_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(t_r1.isDone = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_19_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const t_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteTask(t_r1.taskId));\n    });\n    i0.ɵɵtext(15, \"Delete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"td\")(17, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_19_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const t_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.editTask(t_r1.taskId));\n    });\n    i0.ɵɵtext(18, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const t_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r1.taskId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 5, t_r1.date, \"dd-MM-yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(t_r1.customerName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", t_r1.isDone);\n  }\n}\nexport class ListComponent {\n  constructor(dataService, notifyService) {\n    this.dataService = dataService;\n    this.notifyService = notifyService;\n    this.isDone = false;\n    this.isEditMode = false;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // if()//check the checkbox\n        _this.tasks = yield _this.dataService.getAllTasks();\n      } catch (err) {\n        _this.notifyService.error(err);\n      }\n    })();\n  }\n  deleteTask(taskId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const ok = window.confirm(\"Are you sure?\");\n        if (!ok) return;\n        yield _this2.dataService.deleteTask(taskId);\n        const index = _this2.tasks.findIndex(t => t.taskId === taskId);\n        _this2.tasks.splice(index, 1);\n      } catch (err) {\n        _this2.notifyService.error(err);\n      }\n    })();\n  }\n  editTask(taskId) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield yield _this3.dataService.editTask(_this3.task);\n      alert(\"task\");\n    })();\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.NotifyService));\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 20,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"table\")(2, \"thead\")(3, \"tr\")(4, \"th\");\n      i0.ɵɵtext(5, \"Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Customer-name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Done?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Delete?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Edit?\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, ListComponent_tr_19_Template, 19, 8, \"tr\", 0);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.CheckboxControlValueAccessor, i4.NgControlStatus, i4.NgModel, i3.DatePipe],\n  styles: [\"table[_ngcontent-%COMP%] {\\r\\n    margin: auto;\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n    border: 1px solid;\\r\\n    border-collapse: collapse;\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\ntr[_ngcontent-%COMP%] {\\r\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\r\\n    color: rgb(12, 136, 101);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXRhLWFyZWEvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCOztBQUVBOzs7SUFHSSxpQkFBaUI7SUFDakIseUJBQXlCO0lBQ3pCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnREFBZ0Q7SUFDaEQsd0JBQXdCO0FBQzVCIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxudGFibGUsXHJcbnRoLFxyXG50ZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbn1cclxuXHJcbnRyIHtcclxuICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBHZW5ldmEsIFRhaG9tYSwgc2Fucy1zZXJpZjtcclxuICAgIGNvbG9yOiByZ2IoMTIsIDEzNiwgMTAxKTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAcYA,0BAA4B;IACpBA,YAAY;IAAAA,iBAAK;IACrBA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAgC;;IAAAA,iBAAK;IACzCA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,2BAAI;IACuBA;MAAA;MAAA;MAAA,OAAaA,oCACnD;IAAA,EAD4D;IAA7CA,iBAA8C;IAElDA,2BAAI;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;IAC1DA,2BAAI;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IAACA,qBAAI;IAAAA,iBAAS;;;;IARlDA,eAAY;IAAZA,iCAAY;IACZA,eAAiB;IAAjBA,sCAAiB;IACjBA,eAAgC;IAAhCA,mEAAgC;IAChCA,eAAkB;IAAlBA,uCAAkB;IAEKA,eAAsB;IAAtBA,qCAAsB;;;ACVjE,OAAM,MAAOC,aAAa;EAQtBC,YACYC,WAAwB,EACxBC,aAA4B;IAD5B,gBAAW,GAAXD,WAAW;IACX,kBAAa,GAAbC,aAAa;IAPlB,WAAM,GAAY,KAAK;IAEvB,eAAU,GAAY,KAAK;EAKU;EAE/BC,QAAQ;IAAA;IAAA;MACjB,IAAI;QACA;QACA,KAAI,CAACC,KAAK,SAAS,KAAI,CAACH,WAAW,CAACI,WAAW,EAAE;OACpD,CACD,OAAOC,GAAQ,EAAE;QACb,KAAI,CAACJ,aAAa,CAACK,KAAK,CAACD,GAAG,CAAC;;IAChC;EACL;EAEaE,UAAU,CAACC,MAAc;IAAA;IAAA;MAClC,IAAI;QACA,MAAMC,EAAE,GAAGC,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC;QAC1C,IAAI,CAACF,EAAE,EAAE;QACT,MAAM,MAAI,CAACT,WAAW,CAACO,UAAU,CAACC,MAAM,CAAC;QACzC,MAAMI,KAAK,GAAG,MAAI,CAACT,KAAK,CAACU,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACN,MAAM,KAAKA,MAAM,CAAC;QAC5D,MAAI,CAACL,KAAK,CAACY,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;OAC9B,CACD,OAAOP,GAAQ,EAAE;QACb,MAAI,CAACJ,aAAa,CAACK,KAAK,CAACD,GAAG,CAAC;;IAChC;EACL;EAEaW,QAAQ,CAACR,MAAc;IAAA;IAAA;MAEhC,YACM,MAAI,CAACR,WAAW,CAACgB,QAAQ,CAAC,MAAI,CAACC,IAAI,CAAC;MAE1CC,KAAK,CAAC,MAAM,CAAC;IAAC;EAGlB;;AA3CSpB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1B1B,2BAAK;MAIeA,oBAAI;MAAAA,iBAAK;MACbA,0BAAI;MAAAA,2BAAW;MAAAA,iBAAK;MACpBA,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,8BAAa;MAAAA,iBAAK;MACtBA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAChBA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MAGtBA,8BAAO;MACHA,+DAUK;MACTA,iBAAQ;;;MAXcA,gBAAQ;MAARA,mCAAQ","names":["i0","ListComponent","constructor","dataService","notifyService","ngOnInit","tasks","getAllTasks","err","error","deleteTask","taskId","ok","window","confirm","index","findIndex","t","splice","editTask","task","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\full-stack\\managment full-stack angular\\Frontend\\src\\app\\components\\data-area\\list\\list.component.html","C:\\full-stack\\managment full-stack angular\\Frontend\\src\\app\\components\\data-area\\list\\list.component.ts"],"sourcesContent":["<div>\n    <table>\n        <thead>\n            <tr>\n                <th>Task</th>\n                <th>Description</th>\n                <th>Date</th>\n                <th>Customer-name</th>\n                <th>Done?</th>\n                <th>Delete?</th>\n                <th>Edit?</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let t of tasks\">\n                <td>{{t.taskId}}</td>\n                <td>{{t.description}}</td>\n                <td>{{t.date  | date:'dd-MM-yyyy' }}</td>\n                <td>{{t.customerName}}</td>\n                <td><label>\n                    <input type=\"checkbox\" [(ngModel)]=\"t.isDone\">\n                  </label></td>\n                <td><button (click)=\"deleteTask(t.taskId)\">Delete</button></td>\n                <td><button (click)=\"editTask(t.taskId)\">Edit</button></td>\n            </tr>\n        </tbody>\n    </table>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport TaskModel from 'src/app/models/task-model';\nimport { DataService } from 'src/app/services/data.service';\nimport { NotifyService } from 'src/app/services/notify.service';\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n    public tasks: TaskModel[];\n    public taskId: number;\n    public isDone: boolean = false;\n    public task: TaskModel;\n    public isEditMode: boolean = false;\n\n\n    public constructor(\n        private dataService: DataService,\n        private notifyService: NotifyService) { }\n\n    public async ngOnInit() {\n        try {\n            // if()//check the checkbox\n            this.tasks = await this.dataService.getAllTasks();\n        }\n        catch (err: any) {\n            this.notifyService.error(err);\n        }\n    }\n\n    public async deleteTask(taskId: number) {\n        try {\n            const ok = window.confirm(\"Are you sure?\")\n            if (!ok) return;\n            await this.dataService.deleteTask(taskId);\n            const index = this.tasks.findIndex(t => t.taskId === taskId);\n            this.tasks.splice(index, 1);\n        }\n        catch (err: any) {\n            this.notifyService.error(err);\n        }\n    }\n\n    public async editTask(taskId: number) {\n        \n        await \n        await this.dataService.editTask(this.task)\n\n        alert(\"task\");\n\n\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}