{"ast":null,"code":"import _asyncToGenerator from \"C:/full-stack/managment full-stack angular/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"src/app/services/notify.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class EditComponent {\n  constructor(dataService, notifyService) {\n    this.dataService = dataService;\n    this.notifyService = notifyService;\n    this.isDone = false;\n    this.isEditMode = false;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.tasks = yield _this.dataService.getAllTasks();\n      } catch (err) {\n        _this.notifyService.error(err);\n      }\n    })();\n  }\n  editTask(task) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // const task = this.tasks.find(t => t.taskId === taskId);\n      const taskToUpdate = yield _this2.dataService.getOneTask(task.taskId);\n      console.log(task);\n      _this2.dataService.editTask(task);\n      // const indexToUpdate = this.tasks.findIndex(t => t.taskId === taskToUpdate.taskId);\n      // if (indexToUpdate !== -1) {\n      //     this.tasks[indexToUpdate] = task;\n      // }\n      // await this.dataService.editTask(this.task)\n      // alert(\"task\");\n    })();\n  }\n}\n\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.NotifyService));\n};\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 19,\n  vars: 0,\n  consts: [[\"type\", \"text\"], [\"routerLink\", \"/list\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\")(2, \"h2\");\n      i0.ɵɵtext(3, \"Edit Task \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Description: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 0)(7, \"br\");\n      i0.ɵɵelementStart(8, \"label\");\n      i0.ɵɵtext(9, \"Customer: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 0)(11, \"br\")(12, \"br\");\n      i0.ɵɵelementStart(13, \"button\");\n      i0.ɵɵtext(14, \"Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\")(16, \"br\");\n      i0.ɵɵelementStart(17, \"a\", 1);\n      i0.ɵɵtext(18, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i3.RouterLink, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n  styles: [\"form[_ngcontent-%COMP%] {\\r\\n    border: 3px solid palevioletred;\\r\\n    width: 250px;\\r\\n    text-align: left;\\r\\n    padding: 10px;\\r\\n    margin: auto;\\r\\n    box-shadow: 10px 10px 10px;\\r\\n\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%], button[_ngcontent-%COMP%], select[_ngcontent-%COMP%], a[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    font-size: larger;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXRhLWFyZWEvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwrQkFBK0I7SUFDL0IsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsWUFBWTtJQUNaLDBCQUEwQjs7QUFFOUI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsaUJBQWlCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XHJcbiAgICBib3JkZXI6IDNweCBzb2xpZCBwYWxldmlvbGV0cmVkO1xyXG4gICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTBweDtcclxuXHJcbn1cclxuXHJcbmlucHV0ICwgYnV0dG9uICwgc2VsZWN0ICwgYSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtc2l6ZTogbGFyZ2VyO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;AAYA,OAAM,MAAOA,aAAa;EAQxBC,YACYC,WAAwB,EACxBC,aAA4B;IAD5B,gBAAW,GAAXD,WAAW;IACX,kBAAa,GAAbC,aAAa;IAPlB,WAAM,GAAY,KAAK;IAEvB,eAAU,GAAY,KAAK;EAKU;EAE/BC,QAAQ;IAAA;IAAA;MACjB,IAAI;QACA,KAAI,CAACC,KAAK,SAAS,KAAI,CAACH,WAAW,CAACI,WAAW,EAAE;OACpD,CACD,OAAOC,GAAQ,EAAE;QACb,KAAI,CAACJ,aAAa,CAACK,KAAK,CAACD,GAAG,CAAC;;IAChC;EACL;EAEaE,QAAQ,CAACC,IAAe;IAAA;IAAA;MAEnC;MACA,MAAMC,YAAY,SAAS,MAAI,CAACT,WAAW,CAACU,UAAU,CAACF,IAAI,CAACG,MAAM,CAAC;MACnEC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MAEjB,MAAI,CAACR,WAAW,CAACO,QAAQ,CAACC,IAAI,CAAC;MAC/B;MACA;MACA;MACA;MACA;MAEA;IAAA;EAEJ;;;AApCaV,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ1BC,2BAAK;MAIGA,0BAAU;MAAAA,iBAAK;MAEnBA,6BAAO;MAAAA,6BAAa;MAAAA,iBAAQ;MAC5BA,2BAAqB;MAGrBA,6BAAO;MAAAA,0BAAU;MAAAA,iBAAQ;MACzBA,4BAAqB;MAKrBA,+BAAQ;MAAAA,qBAAI;MAAAA,iBAAS;MACrBA,sBAAM;MAENA,6BAAsB;MAAAA,uBAAM;MAAAA,iBAAI","names":["EditComponent","constructor","dataService","notifyService","ngOnInit","tasks","getAllTasks","err","error","editTask","task","taskToUpdate","getOneTask","taskId","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\full-stack\\managment full-stack angular\\Frontend\\src\\app\\components\\data-area\\edit\\edit.component.ts","C:\\full-stack\\managment full-stack angular\\Frontend\\src\\app\\components\\data-area\\edit\\edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport TaskModel from 'src/app/models/task-model';\nimport { DataService } from 'src/app/services/data.service';\nimport { NotifyService } from 'src/app/services/notify.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\n\n\nexport class EditComponent implements OnInit {\n  public tasks: TaskModel[];\n  public taskId: number;\n  public isDone: boolean = false;\n  public task: TaskModel;\n  public isEditMode: boolean = false;\n\n\n  public constructor(\n      private dataService: DataService,\n      private notifyService: NotifyService) { }\n\n  public async ngOnInit() {\n      try {\n          this.tasks = await this.dataService.getAllTasks();\n      }\n      catch (err: any) {\n          this.notifyService.error(err);\n      }\n  }\n\n  public async editTask(task: TaskModel) {\n\n    // const task = this.tasks.find(t => t.taskId === taskId);\n    const taskToUpdate = await this.dataService.getOneTask(task.taskId);\n    console.log(task);\n\n    this.dataService.editTask(task);\n    // const indexToUpdate = this.tasks.findIndex(t => t.taskId === taskToUpdate.taskId);\n    // if (indexToUpdate !== -1) {\n    //     this.tasks[indexToUpdate] = task;\n    // }\n    // await this.dataService.editTask(this.task)\n\n    // alert(\"task\");\n\n}\n\n \n}\n\n","<div>\n\n   <form >\n\n    <h2>Edit Task </h2>\n\n    <label>Description: </label>\n    <input type=\"text\" />\n    <br />\n\n    <label>Customer: </label>\n    <input type=\"text\" />\n      \n    <br />\n    <br />\n\n    <button>Edit</button>\n    <br />\n    <br />\n    <a routerLink=\"/list\">Cancel</a>\n\n\n</form>\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}