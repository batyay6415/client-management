{"ast":null,"code":"import _asyncToGenerator from \"C:/full-stack/managment full-stack angular/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ListComponent = class ListComponent {\n  constructor(dataService, notifyService) {\n    this.dataService = dataService;\n    this.notifyService = notifyService;\n    this.isDone = false;\n    this.isEditMode = false;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.tasks = yield _this.dataService.getAllTasks();\n      } catch (err) {\n        _this.notifyService.error(err);\n      }\n    })();\n  }\n  deleteTask(taskId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const ok = window.confirm(\"Are you sure?\");\n        if (!ok) return;\n        yield _this2.dataService.deleteTask(taskId);\n        const index = _this2.tasks.findIndex(t => t.taskId === taskId);\n        _this2.tasks.splice(index, 1);\n      } catch (err) {\n        _this2.notifyService.error(err);\n      }\n    })();\n  }\n  editTask(task) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // const task = this.tasks.find(t => t.taskId === taskId);\n      const taskToUpdate = yield _this3.dataService.getOneTask(task.taskId);\n      console.log(task);\n      _this3.dataService.editTask(task);\n      // const indexToUpdate = this.tasks.findIndex(t => t.taskId === taskToUpdate.taskId);\n      // if (indexToUpdate !== -1) {\n      //     this.tasks[indexToUpdate] = task;\n      // }\n      // await this.dataService.editTask(this.task)\n      // alert(\"task\");\n    })();\n  }\n};\n\nListComponent = __decorate([Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})], ListComponent);\nexport { ListComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAQtBC,YACYC,WAAwB,EACxBC,aAA4B;IAD5B,gBAAW,GAAXD,WAAW;IACX,kBAAa,GAAbC,aAAa;IAPlB,WAAM,GAAY,KAAK;IAEvB,eAAU,GAAY,KAAK;EAKU;EAE/BC,QAAQ;IAAA;IAAA;MACjB,IAAI;QACA,KAAI,CAACC,KAAK,SAAS,KAAI,CAACH,WAAW,CAACI,WAAW,EAAE;OACpD,CACD,OAAOC,GAAQ,EAAE;QACb,KAAI,CAACJ,aAAa,CAACK,KAAK,CAACD,GAAG,CAAC;;IAChC;EACL;EAEaE,UAAU,CAACC,MAAc;IAAA;IAAA;MAClC,IAAI;QACA,MAAMC,EAAE,GAAGC,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC;QAC1C,IAAI,CAACF,EAAE,EAAE;QACT,MAAM,MAAI,CAACT,WAAW,CAACO,UAAU,CAACC,MAAM,CAAC;QACzC,MAAMI,KAAK,GAAG,MAAI,CAACT,KAAK,CAACU,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACN,MAAM,KAAKA,MAAM,CAAC;QAC5D,MAAI,CAACL,KAAK,CAACY,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;OAC9B,CACD,OAAOP,GAAQ,EAAE;QACb,MAAI,CAACJ,aAAa,CAACK,KAAK,CAACD,GAAG,CAAC;;IAChC;EACL;EAEaW,QAAQ,CAACC,IAAe;IAAA;IAAA;MAEjC;MACA,MAAMC,YAAY,SAAS,MAAI,CAAClB,WAAW,CAACmB,UAAU,CAACF,IAAI,CAACT,MAAM,CAAC;MACnEY,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MAEjB,MAAI,CAACjB,WAAW,CAACgB,QAAQ,CAACC,IAAI,CAAC;MAC/B;MACA;MACA;MACA;MACA;MAEA;IAAA;EAEJ;CAEH;;AAnDYnB,aAAa,eALzBD,SAAS,CAAC;EACPyB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACrC,CAAC,GACW1B,aAAa,CAmDzB;SAnDYA,aAAa","names":["Component","ListComponent","constructor","dataService","notifyService","ngOnInit","tasks","getAllTasks","err","error","deleteTask","taskId","ok","window","confirm","index","findIndex","t","splice","editTask","task","taskToUpdate","getOneTask","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\full-stack\\managment full-stack angular\\Frontend\\src\\app\\components\\data-area\\list\\list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport TaskModel from 'src/app/models/task-model';\nimport { DataService } from 'src/app/services/data.service';\nimport { NotifyService } from 'src/app/services/notify.service';\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n    public tasks: TaskModel[];\n    public taskId: number;\n    public isDone: boolean = false;\n    public task: TaskModel;\n    public isEditMode: boolean = false;\n\n\n    public constructor(\n        private dataService: DataService,\n        private notifyService: NotifyService) { }\n\n    public async ngOnInit() {\n        try {\n            this.tasks = await this.dataService.getAllTasks();\n        }\n        catch (err: any) {\n            this.notifyService.error(err);\n        }\n    }\n\n    public async deleteTask(taskId: number) {\n        try {\n            const ok = window.confirm(\"Are you sure?\")\n            if (!ok) return;\n            await this.dataService.deleteTask(taskId);\n            const index = this.tasks.findIndex(t => t.taskId === taskId);\n            this.tasks.splice(index, 1);\n        }\n        catch (err: any) {\n            this.notifyService.error(err);\n        }\n    }\n\n    public async editTask(task: TaskModel) {\n\n        // const task = this.tasks.find(t => t.taskId === taskId);\n        const taskToUpdate = await this.dataService.getOneTask(task.taskId);\n        console.log(task);\n\n        this.dataService.editTask(task);\n        // const indexToUpdate = this.tasks.findIndex(t => t.taskId === taskToUpdate.taskId);\n        // if (indexToUpdate !== -1) {\n        //     this.tasks[indexToUpdate] = task;\n        // }\n        // await this.dataService.editTask(this.task)\n\n        // alert(\"task\");\n\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}