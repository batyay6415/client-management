{"ast":null,"code":"import _asyncToGenerator from \"C:/full-stack/managment full-stack angular/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport TaskModel from 'src/app/models/TaskModel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"src/app/services/notify.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction InsertComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r1.customerId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r1.customerName);\n  }\n}\nexport class InsertComponent {\n  constructor(dataService, notifyService, router) {\n    this.dataService = dataService;\n    this.notifyService = notifyService;\n    this.router = router;\n    this.task = new TaskModel();\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.customers = yield _this.dataService.getAllCustomers();\n      } catch (err) {\n        _this.notifyService.error(err);\n      }\n    })();\n  }\n  add() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        let currentDate = new Date().toISOString();\n        _this2.task.date = currentDate;\n        yield _this2.dataService.addNewTask(_this2.task);\n        _this2.notifyService.success(\"Task has been added\");\n        _this2.router.navigateByUrl(\"/list\");\n      } catch (err) {\n        _this2.notifyService.error(err);\n      }\n    })();\n  }\n}\nInsertComponent.ɵfac = function InsertComponent_Factory(t) {\n  return new (t || InsertComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.NotifyService), i0.ɵɵdirectiveInject(i3.Router));\n};\nInsertComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InsertComponent,\n  selectors: [[\"app-insert\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[\"ngNativeValidate\", \"\", 3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"description\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"customerId\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"disabled\", \"\", \"selected\", \"\", \"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function InsertComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function InsertComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.add();\n      });\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Add Task \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Description: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function InsertComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.task.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"label\");\n      i0.ɵɵtext(9, \"Customer: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function InsertComponent_Template_select_ngModelChange_10_listener($event) {\n        return ctx.task.customerId = $event;\n      });\n      i0.ɵɵelementStart(11, \"option\", 3);\n      i0.ɵɵtext(12, \"Select Customer...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, InsertComponent_option_13_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\")(15, \"br\");\n      i0.ɵɵelementStart(16, \"button\");\n      i0.ɵɵtext(17, \"Add\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.customerId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.customers);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"form[_ngcontent-%COMP%] {\\r\\n    border: 3px solid palevioletred;\\r\\n    width: 250px;\\r\\n    text-align: left;\\r\\n    padding: 10px;\\r\\n    margin: auto;\\r\\n    box-shadow: 10px 10px 10px;\\r\\n\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%], button[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    font-size: larger;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXRhLWFyZWEvaW5zZXJ0L2luc2VydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksK0JBQStCO0lBQy9CLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLFlBQVk7SUFDWiwwQkFBMEI7O0FBRTlCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGlCQUFpQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgcGFsZXZpb2xldHJlZDtcclxuICAgIHdpZHRoOiAyNTBweDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgYm94LXNoYWRvdzogMTBweCAxMHB4IDEwcHg7XHJcblxyXG59XHJcblxyXG5pbnB1dCAsIGJ1dHRvbiAsIHNlbGVjdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtc2l6ZTogbGFyZ2VyO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";AAGA,OAAOA,SAAS,MAAM,0BAA0B;;;;;;;;;ICUxCC,iCAA2D;IAAAA,YAAkB;IAAAA,iBAAS;;;;IAAlDA,uCAAsB;IAACA,eAAkB;IAAlBA,uCAAkB;;;ADDrF,OAAM,MAAOC,eAAe;EAKxBC,YACYC,WAAwB,EACxBC,aAA4B,EAC5BC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;IALX,SAAI,GAAG,IAAIN,SAAS,EAAE;EAKE;EAGdO,QAAQ;IAAA;IAAA;MACjB,IAAI;QACA,KAAI,CAACC,SAAS,SAAS,KAAI,CAACJ,WAAW,CAACK,eAAe,EAAE;OAC5D,CACD,OAAMC,GAAQ,EAAE;QACZ,KAAI,CAACL,aAAa,CAACM,KAAK,CAACD,GAAG,CAAC;;IAChC;EACL;EAEaE,GAAG;IAAA;IAAA;MACZ,IAAI;QACA,IAAIC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QAC1C,MAAI,CAACC,IAAI,CAACC,IAAI,GAAGJ,WAAW;QAC5B,MAAM,MAAI,CAACT,WAAW,CAACc,UAAU,CAAC,MAAI,CAACF,IAAI,CAAC;QAC5C,MAAI,CAACX,aAAa,CAACc,OAAO,CAAC,qBAAqB,CAAC;QACjD,MAAI,CAACb,MAAM,CAACc,aAAa,CAAC,OAAO,CAAC;OACrC,CACD,OAAMV,GAAQ,EAAE;QACZ,MAAI,CAACL,aAAa,CAACM,KAAK,CAACD,GAAG,CAAC;;IAChC;EACL;;AA/BKR,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ5BxB,2BAAK;MAECA;QAAA,OAAYyB,SAAK;MAAA,EAAC;MAEpBzB,0BAAI;MAAAA,yBAAS;MAAAA,iBAAK;MAElBA,6BAAO;MAAAA,6BAAa;MAAAA,iBAAQ;MAC5BA,gCAA+E;MAA5DA;QAAA;MAAA,EAA8B;MAAjDA,iBAA+E;MAC/EA,qBAAM;MAENA,6BAAO;MAAAA,0BAAU;MAAAA,iBAAQ;MACzBA,kCAAiE;MAAvCA;QAAA;MAAA,EAA6B;MACnDA,kCAAmC;MAAAA,mCAAkB;MAAAA,iBAAS;MAC9DA,wEAAsF;MAC1FA,iBAAS;MAETA,sBAAM;MAGNA,+BAAQ;MAAAA,oBAAG;MAAAA,iBAAS;;;MAZDA,eAA8B;MAA9BA,8CAA8B;MAIvBA,eAA6B;MAA7BA,6CAA6B;MAE7BA,eAAY;MAAZA,uCAAY","names":["TaskModel","i0","InsertComponent","constructor","dataService","notifyService","router","ngOnInit","customers","getAllCustomers","err","error","add","currentDate","Date","toISOString","task","date","addNewTask","success","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\full-stack\\managment full-stack angular\\Frontend\\src\\app\\components\\data-area\\insert\\insert.component.ts","C:\\full-stack\\managment full-stack angular\\Frontend\\src\\app\\components\\data-area\\insert\\insert.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport CustomerModel from 'src/app/models/CustomerModel';\nimport TaskModel from 'src/app/models/TaskModel';\nimport { DataService } from 'src/app/services/data.service';\nimport { NotifyService } from 'src/app/services/notify.service';\n\n@Component({\n    selector: 'app-insert',\n    templateUrl: './insert.component.html',\n    styleUrls: ['./insert.component.css']\n})\nexport class InsertComponent implements OnInit {\n\n    public customers: CustomerModel[];\n    public task = new TaskModel();\n\n    public constructor(\n        private dataService: DataService,\n        private notifyService: NotifyService,\n        private router: Router ) { }\n\n\n        public async ngOnInit() {\n            try {\n                this.customers = await this.dataService.getAllCustomers()\n            }\n            catch(err: any) {\n                this.notifyService.error(err);\n            }\n        }\n    \n        public async add() {\n            try {\n                let currentDate = new Date().toISOString();\n                this.task.date = currentDate;\n                await this.dataService.addNewTask(this.task)\n                this.notifyService.success(\"Task has been added\");\n                this.router.navigateByUrl(\"/list\");\n            }\n            catch(err: any) {\n                this.notifyService.error(err);\n            }\n        }\n\n}\n","<div>\n\n<form (ngSubmit)=\"add()\" ngNativeValidate>\n\n    <h2>Add Task </h2>\n\n    <label>Description: </label>\n    <input type=\"text\" [(ngModel)]=\"task.description\" name=\"description\" required/>\n    <br />\n\n    <label>Customer: </label>\n    <select name=\"customerId\" [(ngModel)]=\"task.customerId\" required>\n        <option disabled selected value=\"\">Select Customer...</option>\n        <option *ngFor=\"let c of customers\" [value]=\"c.customerId\">{{c.customerName}}</option>\n    </select>\n\n    <br />\n    <br />\n\n    <button>Add</button>\n\n\n</form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}