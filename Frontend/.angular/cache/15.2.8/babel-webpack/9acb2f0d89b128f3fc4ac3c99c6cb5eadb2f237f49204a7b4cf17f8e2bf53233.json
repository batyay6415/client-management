{"ast":null,"code":"import { Notyf } from \"notyf\";\nimport * as i0 from \"@angular/core\";\nexport class NotifyService {\n  constructor() {\n    this.notyf = new Notyf({\n      duration: 3000,\n      position: {\n        x: \"center\",\n        y: \"top\"\n      }\n    });\n  }\n  success(message) {\n    this.notyf.success(message);\n  }\n  error(err) {\n    const message = this.extractErrorMessage(err);\n    this.notyf.error(message);\n  }\n  extractErrorMessage(err) {\n    // If error is the message string: \n    if (typeof err === \"string\") return err;\n    // If error thrown by axios:\n    if (err.response?.data) return err.response.data;\n    // If error thrown by TypeScript/JavaScript:\n    if (typeof err.message === \"string\") return err.message;\n    // Unknown error (JIC = Just in Case)\n    return \"Some error, please try again\";\n  }\n}\nNotifyService.ɵfac = function NotifyService_Factory(t) {\n  return new (t || NotifyService)();\n};\nNotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NotifyService,\n  factory: NotifyService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAAQ,OAAO;;AAK7B,OAAM,MAAOC,aAAa;EAH1BC;IAKY,UAAK,GAAG,IAAIF,KAAK,CAAC;MACtBG,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;QAAEC,CAAC,EAAE,QAAQ;QAAEC,CAAC,EAAE;MAAK;KACpC,CAAC;;EAEKC,OAAO,CAACC,OAAe;IAC1B,IAAI,CAACC,KAAK,CAACF,OAAO,CAACC,OAAO,CAAC;EAC/B;EAEOE,KAAK,CAACC,GAAQ;IACjB,MAAMH,OAAO,GAAG,IAAI,CAACI,mBAAmB,CAACD,GAAG,CAAC;IAC7C,IAAI,CAACF,KAAK,CAACC,KAAK,CAACF,OAAO,CAAC;EAC7B;EAEQI,mBAAmB,CAACD,GAAQ;IAEhC;IACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE,OAAOA,GAAG;IAEvC;IACA,IAAIA,GAAG,CAACE,QAAQ,EAAEC,IAAI,EAAE,OAAOH,GAAG,CAACE,QAAQ,CAACC,IAAI;IAEhD;IACA,IAAG,OAAOH,GAAG,CAACH,OAAO,KAAK,QAAQ,EAAE,OAAOG,GAAG,CAACH,OAAO;IAEtD;IACA,OAAO,8BAA8B;EACzC;;AA7BSP,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAc,SAAbd,aAAa;EAAAe,YAFV;AAAM","names":["Notyf","NotifyService","constructor","duration","position","x","y","success","message","notyf","error","err","extractErrorMessage","response","data","factory","providedIn"],"sourceRoot":"","sources":["C:\\full-stack\\managment full-stack angular\\Frontend\\src\\app\\services\\notify.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Notyf } from \"notyf\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class NotifyService {\r\n\r\n    private notyf = new Notyf({\r\n        duration: 3000,\r\n        position: { x: \"center\", y: \"top\" }\r\n    });\r\n\r\n    public success(message: string): void {\r\n        this.notyf.success(message);\r\n    }\r\n\r\n    public error(err: any): void {\r\n        const message = this.extractErrorMessage(err);\r\n        this.notyf.error(message);\r\n    }\r\n\r\n    private extractErrorMessage(err: any): string {\r\n\r\n        // If error is the message string: \r\n        if (typeof err === \"string\") return err;\r\n\r\n        // If error thrown by axios:\r\n        if (err.response?.data) return err.response.data;\r\n\r\n        // If error thrown by TypeScript/JavaScript:\r\n        if(typeof err.message === \"string\") return err.message;\r\n\r\n        // Unknown error (JIC = Just in Case)\r\n        return \"Some error, please try again\";\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}